// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using prueba_tome;

#nullable disable

namespace prueba_tome.Migrations
{
    [DbContext(typeof(FachadaContext))]
    [Migration("20230322151047_MigracionInicial")]
    partial class MigracionInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.2.23128.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("prueba_tome.Models.Cliente", b =>
                {
                    b.Property<long>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("idcliente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ClienteId"));

                    b.Property<long>("Cedula")
                        .HasColumnType("bigint")
                        .HasColumnName("cedula");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombreintegrado");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telefono");

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("prueba_tome.Models.Cupon", b =>
                {
                    b.Property<long>("CuponId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("idcupon");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CuponId"));

                    b.Property<string>("Entregado")
                        .HasColumnType("char(1)")
                        .HasColumnName("entregado");

                    b.Property<string>("Estado")
                        .HasColumnType("char(1)")
                        .HasColumnName("estado");

                    b.Property<DateTime>("FechaVence")
                        .HasColumnType("datetime")
                        .HasColumnName("fechavence");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("valor");

                    b.HasKey("CuponId");

                    b.ToTable("Cupones");
                });

            modelBuilder.Entity("prueba_tome.Models.CuponesCliente", b =>
                {
                    b.Property<long>("CuponClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("idcuponescliente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CuponClienteId"));

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint")
                        .HasColumnName("idcliente");

                    b.Property<long>("CuponId")
                        .HasColumnType("bigint")
                        .HasColumnName("idcupon");

                    b.HasKey("CuponClienteId");

                    b.ToTable("CuponesClientes");
                });

            modelBuilder.Entity("prueba_tome.Models.Producto", b =>
                {
                    b.Property<long>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ProductoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ProductoId"));

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Cantidad");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Nombre");

                    b.Property<decimal>("TipoId")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("TipoId");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Valor");

                    b.HasKey("ProductoId");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("prueba_tome.Models.TipoProducto", b =>
                {
                    b.Property<long>("TipoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("TipoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("TipoId"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("Varchar(100)")
                        .HasColumnName("Descripcion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("Varchar(100)")
                        .HasColumnName("Nombre");

                    b.HasKey("TipoId");

                    b.ToTable("TipoProductos");
                });
#pragma warning restore 612, 618
        }
    }
}
